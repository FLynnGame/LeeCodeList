
#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
	vector<int> pondSizes(vector<vector<int>>& land) {
		height = land.size();
		width = land[0].size();
		std::vector<int> result;
		int cells = 0;
		for (size_t i = 0; i < height; i++)
		{
			for (size_t j = 0; j < width; j++)
			{
				if (land[i][j] == 0)
				{
					count = 0;
					cells = dfs(i, j, land);
					result.push_back(cells);
				}
			}
		}
		std::sort(result.begin(), result.end());
		return result;
	}

	/* 传入坐标
	/* 返回一次搜索找到的结果
	*/
	int dfs(int x, int y, vector<vector<int>>& land) {
		count++;
		land[x][y] = -1;

		// 对八个方向进行递归查找
		for (size_t i = 0; i < 8; i++)
		{
			xx = x + dir[i][0];
			yy = y + dir[i][1];

			if (xx < 0 || xx >= height || yy < 0 || yy >= width || land[xx][yy] != 0)
			{
				continue;
			}
			dfs(xx, yy, land);
		}
		return count;
	}

private:
	int count = 0;
	int xx = 0, yy = 0;
	int height = 0, width = 0;

public:
	int dir[8][2] = { -1,1, 0,1, 1,1, -1,0, 1,0, -1,-1, 0,-1, 1,-1 };
};

//int main()
//{
//	vector<vector<int>> land(18,vector<int>(73));
//	land[0] = { 2,8,8,4,1,7,1,5,4,2,0,8,1,9,2,5,6,9,7,4,8,9,1,7,3,6,9,3,7,1,5,7,3,1,9,9,9,6,5,1,9,9,4,1,6,4,7,6,1,6,1,3,3,9,0,3,0,0,0,1,3,1,2,0,0,0,3,2,7,3,6,7,9 };
//	land[1] = { 2,0,9,8,2,0,5,8,4,0,4,5,2,1,5,6,0,6,3,3,6,9,5,4,0,9,4,7,1,4,2,8,9,8,0,6,3,5,7,2,1,6,8,4,8,4,6,5,0,3,7,1,7,6,3,0,2,2,2,3,2,4,7,7,6,8,2,9,2,5,0,3,8 };
//	land[2] = { 2,7,0,1,1,3,6,5,6,0,7,0,2,4,5,0,3,7,3,1,5,7,9,8,8,0,9,8,1,9,4,7,5,6,5,4,1,7,7,4,4,3,8,3,5,3,3,8,7,4,5,4,8,0,2,0,4,7,5,4,3,9,1,9,4,9,2,2,2,4,1,2,9 };
//	land[3] = { 6,0,4,4,6,7,8,8,9,9,5,4,9,7,0,4,2,7,1,9,2,2,9,2,4,3,0,5,1,7,8,9,0,5,3,3,3,1,1,7,1,2,7,5,6,8,7,2,3,1,5,3,5,7,9,7,7,8,8,7,2,4,4,2,8,2,3,2,1,9,1,2,7 };
//	land[4] = { 2,5,1,2,2,5,8,2,8,7,4,5,9,8,9,6,0,9,7,0,5,8,8,3,3,8,1,9,4,8,2,3,4,9,1,2,4,5,1,5,4,4,6,9,2,3,3,1,2,2,4,1,2,7,4,6,9,2,3,5,9,7,7,4,9,9,4,7,1,5,5,7,6 };
//	land[5] = { 9,9,9,1,8,3,3,4,6,5,7,7,3,1,1,3,9,2,7,0,6,8,8,0,2,9,6,6,4,4,6,2,6,6,1,7,5,6,4,9,6,9,8,2,1,4,3,4,6,6,8,6,4,7,8,3,7,1,3,7,5,3,2,1,4,7,9,7,3,4,9,0,1 };
//	land[6] = { 7,1,4,9,7,2,1,9,0,9,7,4,5,3,5,2,6,5,6,0,5,0,5,3,1,1,7,9,6,2,1,8,3,4,7,4,2,1,3,5,9,7,7,5,6,1,0,3,6,3,7,9,6,5,1,4,5,7,2,3,5,3,5,2,0,9,5,1,8,6,0,0,6 };
//	land[7] = { 7,9,9,8,8,3,9,7,5,1,1,8,4,4,6,3,7,2,1,9,5,6,1,2,2,5,6,3,9,6,7,9,2,7,1,4,7,3,5,0,1,2,2,5,4,9,3,1,2,1,1,0,5,1,8,4,2,1,2,4,5,4,5,6,8,7,7,4,8,3,2,7,9 };
//	land[8] = { 6,6,6,7,0,8,7,6,2,6,3,1,4,6,6,9,6,2,0,5,4,9,9,9,8,8,6,2,4,3,1,6,6,4,4,4,3,1,8,1,8,3,9,5,2,7,0,0,4,0,6,9,2,0,3,1,6,3,0,7,9,3,9,4,3,6,7,9,8,9,4,2,7 };
//	land[9] = { 7,8,1,8,5,3,5,1,2,9,6,2,8,7,9,7,7,8,6,3,4,4,3,2,8,6,5,7,8,5,7,5,8,3,9,6,8,9,6,6,8,7,4,9,4,6,1,1,6,7,5,6,7,0,3,3,9,3,6,1,3,8,1,2,8,3,3,6,7,9,4,4,1 };
//	land[10] = { 0,7,6,7,6,4,3,1,7,8,0,0,3,1,1,7,9,2,7,9,4,9,6,2,6,6,4,0,1,8,5,6,8,1,3,8,3,7,7,9,8,4,2,8,2,5,5,9,3,3,1,6,3,1,5,2,0,4,2,2,5,4,3,4,6,7,3,4,5,1,5,7,2 };
//	land[11] = { 1,7,7,6,3,4,1,8,4,3,9,8,1,5,5,4,7,7,1,8,5,7,6,4,2,6,7,7,1,3,1,7,4,8,5,2,3,9,1,2,8,2,2,0,4,5,6,1,0,4,4,2,4,9,2,4,8,2,5,5,8,2,4,8,9,3,9,1,4,5,5,5,1 };
//	land[12] = { 0,1,1,8,9,1,0,1,3,0,5,9,3,4,1,7,1,2,1,7,3,4,2,7,2,9,9,7,4,8,7,4,2,6,7,8,8,4,9,6,5,9,6,3,0,0,0,6,4,0,9,8,1,7,0,9,9,3,7,5,8,9,4,9,9,1,2,7,5,3,2,2,3 };
//	land[13] = { 8,8,1,9,4,8,6,7,4,8,7,7,3,1,6,2,6,3,2,8,4,9,3,5,3,7,1,1,3,7,5,6,6,1,9,3,0,6,1,7,5,1,8,1,6,7,1,8,2,2,0,5,1,0,7,6,7,9,3,2,7,8,5,5,2,1,2,3,0,1,5,0,7 };
//	land[14] = { 8,1,9,4,4,5,8,3,8,5,2,3,8,4,5,6,5,0,4,0,6,7,5,5,2,7,8,5,2,1,4,9,5,1,3,4,8,7,7,3,8,5,1,5,5,9,3,9,0,0,0,8,0,4,0,5,3,8,5,1,5,0,1,7,1,3,7,4,2,9,5,5,4 };
//	land[15] = { 5,3,5,5,4,4,1,5,6,1,7,4,0,7,5,8,0,3,6,7,0,4,4,8,3,2,6,3,8,0,9,8,9,9,3,2,7,6,9,6,3,1,8,8,6,4,9,4,4,2,7,5,0,1,5,0,8,9,4,1,6,9,8,7,0,1,7,3,4,6,1,1,8 };
//	land[16] = { 1,9,5,4,1,7,0,6,3,2,1,5,3,1,8,7,5,7,6,6,8,0,3,8,8,2,5,6,7,2,7,8,2,1,5,3,9,3,5,2,2,9,4,7,8,6,7,7,9,8,6,3,0,6,9,7,3,1,9,1,9,1,5,6,3,7,1,0,8,9,9,8,1 };
//	land[17] = { 5,8,5,7,7,8,0,7,9,2,0,4,5,8,8,7,8,6,5,4,6,3,4,1,7,2,8,7,4,7,5,2,5,5,9,3,3,7,1,6,5,1,9,5,5,5,6,2,1,3,6,8,1,0,5,2,8,8,9,9,3,0,5,3,3,8,1,4,5,8,3,2,7 };
//
//
//	Solution s;
//	s.pondSizes(land);
//
//
//	return 0;
//}